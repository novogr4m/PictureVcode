*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}   

body{
    --width: 400px ;
    --height:260px;
    --puzzle-width:80px;
    --puzzle-height:80px;
    --moved:0px;

    background-color: darkcyan;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

#picture{
    width: var(--width);
    height: var(--height);
    background-image: url(./catt.jpg);

    background-size: cover;
    background-position: center;
    position: relative;
    border-radius: 4px;
    box-shadow: 0px 2px 4px rgba(0,0,0,0.3);    
}

#picture::before,#picture::after{
    display: block;
    position: absolute;
    content: '';
    width: inherit;
    height: inherit;
    /* background-color: red; */
    background-image: inherit;
    background-size: inherit;
    background-position: inherit;
    
    clip-path: inset(
        calc((var(--height) - var(--puzzle-height))/2)
        var(--puzzle-width)
        calc((var(--height) - var(--puzzle-height))/2)
        calc(var(--width) - var(--puzzle-width) * 2)
    );
}

#picture::after{
    transform: translateX(
        clamp(
            calc(var(--width) * -1),
            calc(var(--width) * -1 + var(--moved)),
            var(--puzzle-width)
        )
    );
    transform: .25s all ease-in-out;
} 

 #picture:active::after{
    transition: none;
 }

#picture::before{
    background-color: rgba(0, 0, 0, 0.6);
    background-blend-mode: multiply;
}

#handle{
    height: 30px;
    width: calc(var(--width) + var(--puzzle-width) * 2);
    border-radius: 18px;
    background-color: #eee;
    box-shadow: inset 0 0 12px rgba(0,0,0,.2);
    border: 3px solid #ccc;
    position: absolute;
    bottom: -50px;
    left: calc(var(--puzzle-width)*2 * -1);
}

#handle span{
    display:block;
    height: 25px;
    width: var(--puzzle-width);
    background-color: aqua;
    border-radius: inherit;
    box-shadow: 0 0 6px rgba(0, 0, 0, .25), 0 2px 4px rgba(0, 0, 0, .3);
    cursor: move;
    transform: translateX(
        clamp(
            0px,
            var(--moved),
            calc(var(--width) + var(--puzzle-width))
        )
    );
    transform: .25s all ease-in-out;
}

#picture:active #handle span{
    transition: non e ;
}

#picture.passed::before,
#picture.passed::after,
#picture.passed #handle{
    opacity: 0;
}